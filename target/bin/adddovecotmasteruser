#! /bin/bash

# shellcheck disable=SC2094

# shellcheck source=../scripts/helpers/index.sh
source /usr/local/bin/helpers/index.sh

DATABASE=/tmp/docker-mailserver/dovecot-masters.cf

function __usage
{
  printf "\e[35mADDDOVECOTMASTERUSER\e[31m(\e[93m8\e[31m)

\e[38;5;214mNAME\e[39m
    addmasteruser - add a dovecot master user (for POP3/IMAP administration)

\e[38;5;214mSYNOPSIS\e[39m
    ./setup.sh dovecot-master add <USERNAME> [<PASSWORD>]

\e[38;5;214mOPTIONS\e[39m
    \e[94mGeneric Program Information\e[39m
        help       Print the usage information.

\e[38;5;214mEXAMPLES\e[39m
    \e[37m./setup.sh dovecot-master add test-user\e[39m
        Add the dovecot master account 'test-user'. You will be prompted
        to input a password afterwards since no password was supplied.

\e[38;5;214mEXIT STATUS\e[39m
    Exit status is 0 if command was successful. If wrong arguments are provided
    or arguments contain errors, the script will exit early with exit status 1.

"
}

[[ ${1:-} == 'help' ]] && { __usage ; exit 0 ; }

USERNAME="${1}"
shift
PASSWD="${*}"

[[ -z ${USERNAME} ]] && { __usage ; _exit_with_error 'No username specified' ; }

touch "${DATABASE}"
_create_lock # Protect config file with lock to avoid race conditions
if grep -qi "^$(_escape "${USERNAME}")|" "${DATABASE}"
then
  _exit_with_error "User '${USERNAME}' already exists"
fi

if [[ -z ${PASSWD} ]]
then
  read -r -s -p "Enter Password: " PASSWD
  echo
  [[ -z ${PASSWD} ]] && _exit_with_error "Password must not be empty"
fi

HASH="$(doveadm pw -s SHA512-CRYPT -u "${USERNAME}" -p "${PASSWD}")"
echo "${USERNAME}|${HASH}" >> "${DATABASE}"
