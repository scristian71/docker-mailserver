#! /bin/bash

# shellcheck disable=SC2094

# shellcheck source=../scripts/helpers/index.sh
source /usr/local/bin/helpers/index.sh

DATABASE=${DATABASE:-/tmp/docker-mailserver/postfix-accounts.cf}

function __usage
{
  printf '%s' "${PURPLE}ADDMAILUSER${RED}(${YELLOW}8${RED})

${ORANGE}NAME${RESET}
    addmailuser - add an email address (i.e. a user)

${ORANGE}SYNOPSIS${RESET}
    ./setup.sh email add <EMAIL ADDRESS> [<PASSWORD>]

${ORANGE}OPTIONS${RESET}
    ${BLUE}Generic Program Information${RESET}
        help       Print the usage information.

${ORANGE}EXAMPLES${RESET}
    ${LWHITE}./setup.sh email add test@domain.tld${RESET}
        Add the email account test@domain.tld. You will be prompted
        to input a password afterwards since no password was supplied.

${ORANGE}EXIT STATUS${RESET}
    Exit status is 0 if command was successful. If wrong arguments are provided
    or arguments contain errors, the script will exit early with exit status 1.

"
}

[[ ${1:-} == 'help' ]] && { __usage ; exit 0 ; }

FULL_EMAIL="${1}"
shift
PASSWD="${*}"

[[ -z ${FULL_EMAIL} ]] && { __usage ; _errex 'No username specified' ; }
[[ ${FULL_EMAIL} =~ .*\@.* ]] || { __usage ; _errex 'Username must include the domain' ; }

touch "${DATABASE}"
_create_lock # Protect config file with lock to avoid race conditions
if grep -qi "^$(_escape "${FULL_EMAIL}")|" "${DATABASE}"
then
  echo "User '${FULL_EMAIL}' already exists."
  exit 1
fi

if [[ -z ${PASSWD} ]]
then
  read -r -s -p "Enter Password: " PASSWD
  echo
  [[ -z ${PASSWD} ]] && _errex "Password must not be empty"
fi

HASH=$(doveadm pw -s SHA512-CRYPT -u "${FULL_EMAIL}" -p "${PASSWD}")
echo "${FULL_EMAIL}|${HASH}" >> "${DATABASE}"

USER="${FULL_EMAIL%@*}"
DOMAIN="${FULL_EMAIL#*@}"

# Tests fail if the creation of /var/mail/${DOMAIN}/${USER} doesn't happen fast enough after addmailuser executes (check-for-changes.sh race-condition)
if [[ -e "/tmp/docker-mailserver-config-chksum" ]] # Prevent infinite loop in tests like "checking accounts: user3 should have been added to /tmp/docker-mailserver/postfix-accounts.cf even when that file does not exist"
then
  while [[ ! -d "/var/mail/${DOMAIN}/${USER}" ]]
  do
    echo "Waiting for dovecot to create /var/mail/${DOMAIN}/${USER}..."
    sleep 1
  done
fi
